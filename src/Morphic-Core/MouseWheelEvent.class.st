"
A mouse event generated by intercepting the keyboard events (ctrl+up/down arrow) generated by the VM in response to mouse wheel activity.
"
Class {
	#name : #MouseWheelEvent,
	#superclass : #MouseEvent,
	#instVars : [
		'direction'
	],
	#category : #Morphic-Core-Events,
	#timestamp : 'gvc 9/23/2008 11:46'
}

{
	#category : #'instance creation',
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent class>>fromCharacter: aCharacter position: aPoint buttons: evtButtons hand: evtHand stamp: stamp [

	^ self new
		setType: #mouseWheel
		position: aPoint
		direction: aCharacter
		buttons: evtButtons
		hand: evtHand
		stamp: stamp
]

{
	#category : #accessing,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>direction [
	"Answer the value of direction"

	^ direction
]

{
	#category : #accessing,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>direction: anObject [
	"Set the value of direction"

	direction := anObject
]

{
	#category : #testing,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>isDown [

	^ direction = Character arrowDown
]

{
	#category : #testing,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>isLeft [

	^ direction = Character arrowLeft
]

{
	#category : #testing,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>isMouseWheel [
	"Answer whether the receiver is a mouse wheel event."
	
	^true
]

{
	#category : #testing,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>isRight [

	^ direction = Character arrowRight
]

{
	#category : #testing,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>isUp [

	^ direction = Character arrowUp
]

{
	#category : #printing,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>printOn: aStream [

	aStream nextPut: $[.
	aStream nextPutAll: self cursorPoint printString; space.
	aStream nextPutAll: type; space.
	aStream print: self direction; space.
	aStream nextPutAll: self modifierString.
	aStream nextPutAll: self buttonString.
	aStream nextPutAll: timeStamp printString; space.
	aStream	 nextPutAll: self windowIndex printString.
	aStream nextPut: $].
]

{
	#category : #dispatching,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>sentTo: anObject [
	"Dispatch the receiver into anObject"
	
	type == #mouseWheel ifTrue:[^anObject handleMouseWheel: self].
	^super sentTo: anObject.

]

{
	#category : #accessing,
	#timestamp : ' 8/31/2017 05:26:11'
}
MouseWheelEvent>>setType: evtType position: evtPos direction: dirSymbol buttons: evtButtons hand: evtHand stamp: stamp [
	"Set the state for the receiver."
	
	type := evtType.
	position := evtPos.
	buttons := evtButtons.
	source := evtHand.
	wasHandled := false.
	direction := dirSymbol.
	timeStamp := stamp.
]
