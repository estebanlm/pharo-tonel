"

"
Class {
	#name : #KMShortcutTest,
	#superclass : #AbstractKeymappingTest,
	#category : #Keymapping-Tests,
	#timestamp : ''
}

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testAsString [
	self assert: $a asShortcut asString = 'a'.
	self assert: $A asShortcut asString = 'A'.
	self assert: $a ctrl asString = 'Ctrl + a'.
	self assert: $A ctrl asString = 'Ctrl + A'.
	self assert: $b command asString = 'Cmd + b'.
	self assert: $c shift asString = 'Shift + c'.
	self assert: $d alt asString = 'Alt + d'.
	self assert: $e ctrl command asString =  (KMCtrlModifier new asString ,' + ' , KMCommandModifier new asString,' + e').
	
	

]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testBadComposedCmdShortcutFails [
	^ self should: [ KMModifier ctrl ctrl ] raise: Error
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testChainIntegerSucceds [
	^ self assert: ($e ctrl , 1) = ($e ctrl , 1)
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testChainShortcutSucceds [
	^ self assert: ($e ctrl , $e ctrl) = ($e ctrl , $e ctrl)
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testChainSimpleCharsSucceds [
	^ self assert: ($e ctrl , $e) = ($e ctrl , $e)
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testCmdIntegerSucceds [
	^ self assert: 1 ctrl = 1 ctrl
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testCmdKeySucceds [
	^ self assert: $e ctrl = $e ctrl
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testCmdShiftSucceds [
	^ self assert: ($1 shift ctrl matches: {self eventKey: $1 alt: false ctrl: true command: false shift: true})
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testComplexChainMatches [
	|eCtrl eShift e f|
	
	f := self eventKey: $f.
	eCtrl := self eventKey: $e ctrl: true.
	eShift := self eventKey: $e shift: true.
		
	self assert: (($e ctrl, $e shift, $f) matches: {eCtrl}).
	self assert: (($e ctrl, $e shift, $f) matches: {eCtrl. eShift}).
	self assert: (($e ctrl, $e shift, $f) matches: {eCtrl. eShift. f}).

	self deny: (($e ctrl, $e shift, $f) matchesCompletely: {eCtrl}).
	self deny: (($e ctrl, $e shift, $f) matchesCompletely: {eCtrl. eShift}).
	self assert: (($e ctrl, $e shift, $f) matchesCompletely: {eCtrl. eShift. f}).
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testCreation [
	self assert: ($e asKeyCombination isKindOf: KMSingleKeyCombination).
	self assert: ($e ctrl isKindOf: KMModifiedKeyCombination).
	self assert: ($e ctrl alt shift command isKindOf: KMModifiedKeyCombination).
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testEventCodes [
	self assert: $s meta modifier eventCode 
		 equals: OSPlatform current defaultModifier eventCode 
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testModifiedShortcutsMatch [
	|a oneShift oneCommand oneCommandShift|
	
	a := self eventKey: $a ctrl: true.
	oneShift := self eventKey: $1 shift: true.
	oneCommand := self eventKey: $1 command: true.
	oneCommandShift := self eventKey: $1 alt: false ctrl: false command: true shift: true.
	
	self assert: ($a ctrl matches: {a}).
	self assert: ($1 shift matches: {oneShift}).
	self assert: ($1 command matches: {oneCommand}).
	self assert: ($1 command shift matches: {oneCommandShift}).
	
	self deny: ($a ctrl matches: {self eventKey: $a command: true}).
	
	self deny: ($i command shift matches: {self eventKey: $i command: true}).
	self assert: ($i ctrl shift matches: {self eventKey: $i alt: false ctrl: true command: false shift: true}).
	self deny: ($i ctrl matches: {self eventKey: $i alt: false ctrl: true command: false shift: true}).
	
	self assert: ($a ctrl matchesCompletely: {a}).
	self assert: ($1 shift matchesCompletely: {oneShift}).
	self assert: ($1 command matchesCompletely: {oneCommand}).
	self assert: ($1 command shift matchesCompletely: {oneCommandShift}).
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testShiftKeySucceds [
	^ self assert: $e shift = $e shift
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testSimpleChainMatches [
	|e eCtrl |
	e := self eventKey: $e.
	eCtrl := self eventKey: $e ctrl: true.
	
	self assert: (($e ctrl, $e) matches: {eCtrl}).
	self assert: ($e ctrl matches: {eCtrl. e}).
	
	self deny: (($e ctrl, $e) matches: {eCtrl. self eventKey: $a}).
	self deny: ($e ctrl matches: {e}).
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testSingleShortcutsMatch [
	|a one home |
	a := self eventKey: $a.
	one := self eventKey: 1 asCharacter.
	home := self eventKey: Character home.
	
	self assert: ($a asKeyCombination matches: {a}).
	self assert: (1 asKeyCombination matches: {one}).
	self assert: (Character home asKeyCombination matches: {home}).
	
	self deny: ($b asKeyCombination matches: {a}).
	
	self assert: ($a asKeyCombination matchesCompletely: {a}).
	self assert: (1 asKeyCombination matchesCompletely: {one}).
]

{
	#category : #tests,
	#timestamp : ' 8/31/2017 05:26:43'
}
KMShortcutTest>>testTripleChainShortcutSucceds [
	^ self assert: ($e ctrl , $e ctrl , $d ctrl) = ($e ctrl , $e ctrl , $d ctrl)
]
