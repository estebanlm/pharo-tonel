"
A superclass for classes used to test critics.
"
Class {
	#name : #RBSmalllintTestSuperclassObject,
	#superclass : #Object,
	#category : #Refactoring-Tests-Critics,
	#timestamp : 'monty 10/11/2016 00:24'
}

{
	#category : #accessing,
	#timestamp : ' 8/31/2017 05:26:45'
}
RBSmalllintTestSuperclassObject class>>defaultExplicitClassReferences [
	"generated by #updateDefaultExplicitClassReferences"
	^ {RBSmalllintTestObject. RBSmalllintTestNoClassCommentObject. RBSmalllintTestAddRemoveDependentsObject. RBSmalllintTestAddRemoveDependentsGoodObject. RBSmalllintTestDefinesEqualNotHashObject. RBSmalllintTestDefinesEqualNotHashGoodObject. RBSmalllintTestSuperclassObject}
]

{
	#category : #testing,
	#timestamp : ' 8/31/2017 05:26:45'
}
RBSmalllintTestSuperclassObject class>>mustNotBeReferenced [
	^ false
]

{
	#category : #compiling,
	#timestamp : ' 8/31/2017 05:26:45'
}
RBSmalllintTestSuperclassObject class>>updateDefaultExplicitClassReferences [
	"Run after adding a new subclass to the hierachy:
		self updateDefaultExplicitClassReferences
	"

	"avoid self so it's always compiled in the metaclass of the
	of the root even when sent to a subclass"
	RBSmalllintTestSuperclassObject class
		compile:
			'defaultExplicitClassReferences
	"generated by #updateDefaultExplicitClassReferences"
	^ ',
			(RBSmalllintTestSuperclassObject withAllSubclasses asArray
				reject: [ :each | each mustNotBeReferenced ]) printString
		classified: #accessing
]

{
	#category : #methods,
	#timestamp : ' 8/31/2017 05:26:45'
}
RBSmalllintTestSuperclassObject>>equivalentSuperclassMethods [
	^ self identityHash
]
